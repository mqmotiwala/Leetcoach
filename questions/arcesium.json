[
    {
        "acRate": 41.305649240316114,
        "difficulty": "Medium",
        "freqBar": 35.86170539065057,
        "frontendQuestionId": "33",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Search in Rotated Sorted Array",
        "titleSlug": "search-in-rotated-sorted-array",
        "topicTags": [
            {
                "name": "Array",
                "id": "VG9waWNUYWdOb2RlOjU=",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "id": "VG9waWNUYWdOb2RlOjEx",
                "slug": "binary-search"
            }
        ],
        "hasSolution": true,
        "hasVideoSolution": false
    },
    {
        "acRate": 57.11671109333771,
        "difficulty": "Medium",
        "freqBar": 34.19323602201613,
        "frontendQuestionId": "72",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Edit Distance",
        "titleSlug": "edit-distance",
        "topicTags": [
            {
                "name": "String",
                "id": "VG9waWNUYWdOb2RlOjEw",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "id": "VG9waWNUYWdOb2RlOjEz",
                "slug": "dynamic-programming"
            }
        ],
        "hasSolution": true,
        "hasVideoSolution": false
    },
    {
        "acRate": 40.2888305504506,
        "difficulty": "Hard",
        "freqBar": 39.87314463248248,
        "frontendQuestionId": "124",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Binary Tree Maximum Path Sum",
        "titleSlug": "binary-tree-maximum-path-sum",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "id": "VG9waWNUYWdOb2RlOjEz",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "id": "VG9waWNUYWdOb2RlOjIw",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "id": "VG9waWNUYWdOb2RlOjIx",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "id": "VG9waWNUYWdOb2RlOjYxMDU3",
                "slug": "binary-tree"
            }
        ],
        "hasSolution": true,
        "hasVideoSolution": false
    },
    {
        "acRate": 40.42624206696727,
        "difficulty": "Medium",
        "freqBar": 34.08410619258074,
        "frontendQuestionId": "130",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Surrounded Regions",
        "titleSlug": "surrounded-regions",
        "topicTags": [
            {
                "name": "Array",
                "id": "VG9waWNUYWdOb2RlOjU=",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "id": "VG9waWNUYWdOb2RlOjIx",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "id": "VG9waWNUYWdOb2RlOjIy",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "id": "VG9waWNUYWdOb2RlOjIz",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "id": "VG9waWNUYWdOb2RlOjYxMDUz",
                "slug": "matrix"
            }
        ],
        "hasSolution": true,
        "hasVideoSolution": false
    },
    {
        "acRate": 51.37340760016941,
        "difficulty": "Medium",
        "freqBar": 40.31798880175498,
        "frontendQuestionId": "198",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "House Robber",
        "titleSlug": "house-robber",
        "topicTags": [
            {
                "name": "Array",
                "id": "VG9waWNUYWdOb2RlOjU=",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "id": "VG9waWNUYWdOb2RlOjEz",
                "slug": "dynamic-programming"
            }
        ],
        "hasSolution": true,
        "hasVideoSolution": false
    },
    {
        "acRate": 50.71766710850218,
        "difficulty": "Medium",
        "freqBar": 76.94579541193221,
        "frontendQuestionId": "886",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Possible Bipartition",
        "titleSlug": "possible-bipartition",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "id": "VG9waWNUYWdOb2RlOjIx",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "id": "VG9waWNUYWdOb2RlOjIy",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "id": "VG9waWNUYWdOb2RlOjIz",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "id": "VG9waWNUYWdOb2RlOjI0",
                "slug": "graph"
            }
        ],
        "hasSolution": true,
        "hasVideoSolution": false
    },
    {
        "acRate": 44.284961333296984,
        "difficulty": "Medium",
        "freqBar": 0.0,
        "frontendQuestionId": "1567",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Maximum Length of Subarray With Positive Product",
        "titleSlug": "maximum-length-of-subarray-with-positive-product",
        "topicTags": [
            {
                "name": "Array",
                "id": "VG9waWNUYWdOb2RlOjU=",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "id": "VG9waWNUYWdOb2RlOjEz",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "id": "VG9waWNUYWdOb2RlOjE3",
                "slug": "greedy"
            }
        ],
        "hasSolution": false,
        "hasVideoSolution": false
    },
    {
        "acRate": 57.383860353577596,
        "difficulty": "Medium",
        "freqBar": 100.0,
        "frontendQuestionId": "1686",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Stone Game VI",
        "titleSlug": "stone-game-vi",
        "topicTags": [
            {
                "name": "Array",
                "id": "VG9waWNUYWdOb2RlOjU=",
                "slug": "array"
            },
            {
                "name": "Math",
                "id": "VG9waWNUYWdOb2RlOjg=",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "id": "VG9waWNUYWdOb2RlOjE3",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "id": "VG9waWNUYWdOb2RlOjYxMDUw",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Game Theory",
                "id": "VG9waWNUYWdOb2RlOjYxMDcz",
                "slug": "game-theory"
            }
        ],
        "hasSolution": false,
        "hasVideoSolution": false
    },
    {
        "acRate": 67.3799029867284,
        "difficulty": "Medium",
        "freqBar": 0.0,
        "frontendQuestionId": "2024",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Maximize the Confusion of an Exam",
        "titleSlug": "maximize-the-confusion-of-an-exam",
        "topicTags": [
            {
                "name": "String",
                "id": "VG9waWNUYWdOb2RlOjEw",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "id": "VG9waWNUYWdOb2RlOjEx",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "id": "VG9waWNUYWdOb2RlOjU1ODIx",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "id": "VG9waWNUYWdOb2RlOjYxMDY4",
                "slug": "prefix-sum"
            }
        ],
        "hasSolution": true,
        "hasVideoSolution": false
    },
    {
        "acRate": 20.527984305474604,
        "difficulty": "Hard",
        "freqBar": 76.95056937214146,
        "frontendQuestionId": "2035",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
        "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
        "topicTags": [
            {
                "name": "Array",
                "id": "VG9waWNUYWdOb2RlOjU=",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "id": "VG9waWNUYWdOb2RlOjk=",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "id": "VG9waWNUYWdOb2RlOjEx",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "id": "VG9waWNUYWdOb2RlOjEz",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "id": "VG9waWNUYWdOb2RlOjE5",
                "slug": "bit-manipulation"
            },
            {
                "name": "Ordered Set",
                "id": "VG9waWNUYWdOb2RlOjYxMDcw",
                "slug": "ordered-set"
            },
            {
                "name": "Bitmask",
                "id": "VG9waWNUYWdOb2RlOjYxMDc4",
                "slug": "bitmask"
            }
        ],
        "hasSolution": false,
        "hasVideoSolution": false
    },
    {
        "acRate": 43.90938686923494,
        "difficulty": "Medium",
        "freqBar": 0.0,
        "frontendQuestionId": "2211",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Count Collisions on a Road",
        "titleSlug": "count-collisions-on-a-road",
        "topicTags": [
            {
                "name": "String",
                "id": "VG9waWNUYWdOb2RlOjEw",
                "slug": "string"
            },
            {
                "name": "Stack",
                "id": "VG9waWNUYWdOb2RlOjE1",
                "slug": "stack"
            },
            {
                "name": "Simulation",
                "id": "VG9waWNUYWdOb2RlOjYxMDU1",
                "slug": "simulation"
            }
        ],
        "hasSolution": false,
        "hasVideoSolution": false
    },
    {
        "acRate": 45.97733288595609,
        "difficulty": "Medium",
        "freqBar": 0.0,
        "frontendQuestionId": "2327",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Number of People Aware of a Secret",
        "titleSlug": "number-of-people-aware-of-a-secret",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "id": "VG9waWNUYWdOb2RlOjEz",
                "slug": "dynamic-programming"
            },
            {
                "name": "Queue",
                "id": "VG9waWNUYWdOb2RlOjM0",
                "slug": "queue"
            },
            {
                "name": "Simulation",
                "id": "VG9waWNUYWdOb2RlOjYxMDU1",
                "slug": "simulation"
            }
        ],
        "hasSolution": false,
        "hasVideoSolution": false
    },
    {
        "acRate": 56.41869095816464,
        "difficulty": "Hard",
        "freqBar": 0.0,
        "frontendQuestionId": "2509",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Cycle Length Queries in a Tree",
        "titleSlug": "cycle-length-queries-in-a-tree",
        "topicTags": [
            {
                "name": "Array",
                "id": "VG9waWNUYWdOb2RlOjU=",
                "slug": "array"
            },
            {
                "name": "Tree",
                "id": "VG9waWNUYWdOb2RlOjIw",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "id": "VG9waWNUYWdOb2RlOjYxMDU3",
                "slug": "binary-tree"
            }
        ],
        "hasSolution": false,
        "hasVideoSolution": false
    },
    {
        "acRate": 44.588363661961914,
        "difficulty": "Hard",
        "freqBar": 42.86168921935147,
        "frontendQuestionId": "3250",
        "isFavor": false,
        "paidOnly": false,
        "status": null,
        "title": "Find the Count of Monotonic Pairs I",
        "titleSlug": "find-the-count-of-monotonic-pairs-i",
        "topicTags": [
            {
                "name": "Array",
                "id": "VG9waWNUYWdOb2RlOjU=",
                "slug": "array"
            },
            {
                "name": "Math",
                "id": "VG9waWNUYWdOb2RlOjg=",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "id": "VG9waWNUYWdOb2RlOjEz",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "id": "VG9waWNUYWdOb2RlOjYxMDU2",
                "slug": "combinatorics"
            },
            {
                "name": "Prefix Sum",
                "id": "VG9waWNUYWdOb2RlOjYxMDY4",
                "slug": "prefix-sum"
            }
        ],
        "hasSolution": false,
        "hasVideoSolution": false
    }
]